name: Unit Tests

on:
  push:
  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  phpunit-ubuntu:
    name: Run Unit Tests on Ubuntu
    timeout-minutes: 30
    strategy:
      matrix:
        php-version:
          - 7.4
          - 8.0
          - 8.1
          - 8.2
          - 8.3
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Ghostscript
        run: |
          sudo apt-get update
          sudo apt-get install -y ghostscript
      - name: Set up php ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
      - uses: ramsey/composer-install@v2
      - name: Change ImageMagick security policy on Ubuntu
        run: |
          DQT='"'
          SRC="rights=${DQT}none${DQT} pattern=${DQT}PDF${DQT}"
          RPL="rights=${DQT}read|write${DQT} pattern=${DQT}PDF${DQT}"
          sudo sed -i "s/$SRC/$RPL/" /etc/ImageMagick-6/policy.xml
      - name: Unit testing with phpunit
        env:
          MINDEE_API_KEY: ${{ secrets.MINDEE_API_KEY_SE_TESTS }}
        run: |
          ./vendor/bin/phpunit -c tests/phpunit.xml

  phpunit-macos:
    name: Run Unit Tests on MacOS
    timeout-minutes: 30
    strategy:
      matrix:
        php-version:
          - 7.4
          - 8.0
          - 8.1
          - 8.2
          - 8.3
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up php ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        env:
          phpts: zts
        with:
          php-version: ${{ matrix.php-version }}
      - name: Install Ghostscript & ImageMagick
        run: | 
          brew update
          brew install imagemagick
          brew install ghostscript
      - uses: ramsey/composer-install@v2
      - name: Unit testing with phpunit
        env:
          MINDEE_API_KEY: ${{ secrets.MINDEE_API_KEY_SE_TESTS }}
        run: |
          ./vendor/bin/phpunit -c tests/phpunit.xml

  phpunit-windows:
    name: Run Unit Tests on Windows
    timeout-minutes: 30
    strategy:
      matrix:
        php-version:
          - 7.4
          - 8.0
          - 8.1
          - 8.2
          - 8.3
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up php ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        env:
          phpts: zts
        with:
          php-version: ${{ matrix.php-version }}
          extensions: curl, fileinfo, json, imagick
      - name: Download and Install Ghostscript
        run: |
          $url = "https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs10031/gs10031w32.exe"
          $output = "$env:TEMP\gs10031w32.exe"
          Invoke-WebRequest -Uri $url -OutFile $output
          Start-Process -FilePath $output -ArgumentList "/S" -Wait
        shell: powershell

      - name: Add Ghostscript to PATH
        run: |
          $gsPath = "C:\Program Files (x86)\gs\gs10.03.1\bin"
          echo "$gsPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Add Ghostscript to PATH
        run: |
         $gsPath = (Get-ChildItem "C:\Program Files\gs" -Directory | Sort-Object Name -Descending | Select-Object -First 1).FullName + "\bin"
         echo "$gsPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - uses: ramsey/composer-install@v2
      - name: Unit testing with phpunit
        env:
          MINDEE_API_KEY: ${{ secrets.MINDEE_API_KEY_SE_TESTS }}
        run: |
          ./vendor/bin/phpunit -c tests/phpunit.xml
